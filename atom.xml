<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="https://newzone.top/atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN">
  <id>https://newzone.top/</id>
  <title>LuoThink</title>
  <subtitle>开源工具、效率方法，记录并输出一切能让自己提升的知识。</subtitle>
  <icon>https://newzone.top/favicon.ico</icon>
  <updated>2024-07-15T16:50:18.452Z</updated>
  <generator>@vuepress/plugin-feed</generator>
  <link rel="self" href="https://newzone.top/atom.xml"/>
  <link rel="alternate" href="https://newzone.top/"/>
  <category term="代码编程"/>
  <entry>
    <title type="text">markdown语法示例</title>
    <id>https://newzone.top/code/markdown/markdown%E8%AF%AD%E6%B3%95%E7%A4%BA%E4%BE%8B.html</id>
    <link href="https://newzone.top/code/markdown/markdown%E8%AF%AD%E6%B3%95%E7%A4%BA%E4%BE%8B.html"/>
    <updated>2024-07-15T03:01:25.000Z</updated>
    <summary type="html"><![CDATA[
<blockquote>
<p>微信公众号排版工具。问题或建议，请公众号留言。<strong><a href="#jump_8">程序员翻身</a></strong></p>
</blockquote>
<p>建议使用 <strong>Chrome</strong> 浏览器，体验最佳效果。</p>
<p>使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。</p>
<p>Markdown是一种轻量级的「标记语言」。</p>
<p>请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。</p>]]></summary>
    <content type="html"><![CDATA[
<blockquote>
<p>微信公众号排版工具。问题或建议，请公众号留言。<strong><a href="#jump_8">程序员翻身</a></strong></p>
</blockquote>
<p>建议使用 <strong>Chrome</strong> 浏览器，体验最佳效果。</p>
<p>使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。</p>
<p>Markdown是一种轻量级的「标记语言」。</p>
<p>请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。</p>
<h2>1 Markdown.com.cn 简介</h2>
<ul>
<li>支持自定义样式的 Markdown 编辑器</li>
<li>支持微信公众号、知乎和稀土掘金</li>
<li>点击右上方对应图标，一键复制到各平台</li>
</ul>
<h2>2 Markdown语法教程</h2>
<h3>2.1 标题</h3>
<p>不同数量的<code>#</code>可以完成不同的标题，如下：</p>
<h1>一级标题</h1>
<h2>二级标题</h2>
<h3>三级标题</h3>
<h3>2.2 字体</h3>
<p>粗体、斜体、粗体和斜体，删除线，需要在文字前后加不同的标记符号。如下：</p>
<p><strong>这个是粗体</strong></p>
<p><em>这个是斜体</em></p>
<p><em><strong>这个是粗体加斜体</strong></em></p>
<p><sub>这里想用删除线</sub>~</p>
<p>注：如果想给字体换颜色、字体或者居中显示，需要使用内嵌HTML来实现。</p>
<h3>2.3 无序列表</h3>
<p>无序列表的使用，在符号<code>-</code>后加空格使用。如下：</p>
<ul>
<li>无序列表 1</li>
<li>无序列表 2</li>
<li>无序列表 3</li>
</ul>
<p>如果要控制列表的层级，则需要在符号<code>-</code>前使用空格。如下：</p>
<ul>
<li>无序列表 1</li>
<li>无序列表 2
<ul>
<li>无序列表 2.1</li>
<li>无序列表 2.2</li>
</ul>
</li>
</ul>
<p><strong>由于微信原因，最多支持到二级列表</strong>。</p>
<h3>2.4 有序列表</h3>
<p>有序列表的使用，在数字及符号<code>.</code>后加空格后输入内容，如下：</p>
<ol>
<li>有序列表 1</li>
<li>有序列表 2</li>
<li>有序列表 3</li>
</ol>
<h3>2.5 引用</h3>
<p>引用的格式是在符号<code>&gt;</code>后面书写文字。如下：</p>
<blockquote>
<p>读一本好书，就是在和高尚的人谈话。 ——歌德</p>
</blockquote>
<blockquote>
<p>雇用制度对工人不利，但工人根本无力摆脱这个制度。 ——阮一峰</p>
</blockquote>
<h3>2.7 链接</h3>
<p>微信公众号仅支持公众号文章链接，即域名为<code>https://mp.weixin.qq.com/</code>的合法链接。使用方法如下所示：</p>
<p>对于该论述，欢迎读者查阅之前发过的文章，<a href="https://mp.weixin.qq.com/s/s5IhxV2ooX3JN_X416nidA" target="_blank" rel="noopener noreferrer">你是《未来世界的幸存者》么？</a>
<a id="jump_8"></a></p>
<h3>2.8 图片</h3>
<p>插入图片，格式如下：</p>
<figure><img src="https://www.nginx.cn/wp-content/uploads/2020/03/qrcode_for_gh_82cf87d482f0_258.jpg" alt="这里写图片描述" tabindex="0" loading="lazy"><figcaption>这里写图片描述</figcaption></figure>
<p>支持 jpg、png、gif、svg 等图片格式，<strong>其中 svg 文件仅可在微信公众平台中使用</strong>，svg 文件示例如下：</p>
<figure><img src="https://markdown.com.cn/images/i-am-svg.svg" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>支持图片<strong>拖拽和截图粘贴</strong>到编辑器中。</p>
<p>注：支持图片 <em><strong>拖拽和截图粘贴</strong></em> 到编辑器中，仅支持 https 的图片，图片粘贴到微信时会自动上传微信服务器。</p>
<h3>2.9 分割线</h3>
<p>可以在一行中用三个以上的减号来建立一个分隔线，同时需要在分隔线的上面空一行。如下：</p>
]]></content>
    <category term="代码编程"/>
    <published>2024-07-14T00:00:00.000Z</published>
  </entry>
  <entry>
    <title type="text">希尔排序算法</title>
    <id>https://newzone.top/code/%E7%AE%97%E6%B3%95/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.html</id>
    <link href="https://newzone.top/code/%E7%AE%97%E6%B3%95/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.html"/>
    <updated>2024-07-15T16:49:03.000Z</updated>
    <summary type="html"><![CDATA[
<h2>介绍</h2>
<p>希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。希尔排序是非稳定排序算法。希尔排序是基于插入排序的以下两点性质而提出改进方法的：</p>
<ul>
<li>
<p>插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率</p>
</li>
<li>
<p>但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位</p>
</li>
</ul>
<h2>代码</h2>
<ol>
<li>C 代码</li>
</ol>
<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap, i, j;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[i];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap )</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">                arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">            arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">22</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">34</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">82</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">55</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">89</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">37</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">35</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">70</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">/sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">arr);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr, len);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[i]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>]]></summary>
    <content type="html"><![CDATA[
<h2>介绍</h2>
<p>希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。希尔排序是非稳定排序算法。希尔排序是基于插入排序的以下两点性质而提出改进方法的：</p>
<ul>
<li>
<p>插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率</p>
</li>
<li>
<p>但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位</p>
</li>
</ul>
<h2>代码</h2>
<ol>
<li>C 代码</li>
</ol>
<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap, i, j;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[i];</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap )</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">                arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j];</span></span>
<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">            arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">22</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">34</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">82</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">55</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">89</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">37</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">35</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">70</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">};</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">/sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">arr);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr, len);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[i]);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2">
<li>Python 代码</li>
</ol>
<div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#24292E;--shiki-dark:#D19A66;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> n </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">//</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2"> range</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(gap, n):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr[i]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            while</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">and</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr[j</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">gap] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                arr[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">gap]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">                j </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">-=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            arr[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">//=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 2</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        </span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">if</span><span style="--shiki-light:#005CC5;--shiki-dark:#E06C75"> __name__</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> ==</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "__main__"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">    arr </span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">22</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">34</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">82</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">55</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">89</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#61AFEF">    shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#56B6C2">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"Sorted array:"</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, arr)</span></span></code></pre>
<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2>分析</h2>
<p>相较于插入排序， 希尔引入了 <code>gap</code> ，<code>gap</code> 是数组长度对2取模。整个算法的核心是：<em>如果两个元素之间的<strong>步长</strong>为<code>gap</code>的话，比较大小，交换位置，几轮循环之后，<code>gap</code>变为 <strong>1</strong>, 也就是说最后只要进行一次相邻元素比较排序，整个排序就完成了！</em></p>
<p>一番下来，情不自禁：还是 Python 看得更清晰简明一点！</p>
]]></content>
    <published>2024-07-15T16:49:03.000Z</published>
  </entry>
</feed>