"use strict";(self.webpackChunklearn_data=self.webpackChunklearn_data||[]).push([[3524],{2798:(i,s,a)=>{a.d(s,{l:()=>n});const n={category:{"/":{path:"/category/",map:{代码编程:{path:"/category/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/",indexes:[0]}}}},tag:{"/":{path:"/tag/",map:{markdown:{path:"/tag/markdown/",indexes:[0]}}}}}},8589:(i,s,a)=>{a.d(s,{M:()=>n});const n=["/code/markdown/markdown%E8%AF%AD%E6%B3%95%E7%A4%BA%E4%BE%8B.html","/code/%E7%AE%97%E6%B3%95/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.html"]},594:(i,s,a)=>{a.d(s,{U:()=>n});const n={article:{"/":{path:"/article/",indexes:[0,1]}},star:{"/":{path:"/star/",indexes:[0]}},timeline:{"/":{path:"/timeline/",indexes:[1,0]}}}},6093:(i,s,a)=>{a.d(s,{B:()=>z});var n={};a.r(n);var t={};a.r(t),a.d(t,{default:()=>c});var e={};a.r(e),a.d(e,{default:()=>F});var l={};a.r(l),a.d(l,{default:()=>T});var h={};a.r(h),a.d(h,{default:()=>O});var k=a(9862),p=a(4326),r=a(5860),d=a(4788),o=a(8021),g=a(8493),B=a(5910);const c=(0,k.re)({enhance:({app:i})=>{(0,p.L4)("FontIcon")||i.component("FontIcon",d.A),(0,p.L4)("Badge")||i.component("Badge",o.A),(0,p.L4)("BiliBili")||i.component("BiliBili",g.A),(0,p.L4)("VidStack")||i.component("VidStack",B.A)},setup:()=>{(0,r.r9V)("https://cdn.staticfile.net/font-awesome/6.5.1/js/all.min.js")},rootComponents:[]});var y=a(5431),A=a(1110),D=a(919),m=a(943),C=a(2773),E=a(7041),u=a(7397),b=a(7406);const F=(0,k.re)({enhance:({app:i})=>{},setup:()=>{(0,b.p)()}});var f=a(6142),v=a(4414),w=a(878),x=a(4495),L=a(2360),I=a(5490);(0,x.M_)((i=>{const s=i.t,a=!1!==i.I,n=i.i;return a?{title:s,content:n?()=>[(0,L.h)(w.GB,{icon:n}),s]:null,order:i.O,index:i.I}:null}));const T=(0,k.re)({enhance:({app:i,router:s})=>{const{scrollBehavior:a}=s.options;s.options.scrollBehavior=async(...i)=>(await w.lE.wait(),a(...i)),(0,w.fk)(i),i.component("HopeIcon",w.GB),i.component("BloggerInfo",I.tI),i.component("SocialMedias",I.rS)},setup:()=>{(0,w.PV)(),(0,w.i$)(),(0,I.su)()},layouts:{Layout:w.PE,NotFound:w.Mk,BlogCategory:I.Pn,BlogHome:I.qX,BlogType:I.z7,Timeline:I.Kf}});var j=a(4462);const O=(0,k.re)({}),z=[n,t,y,A,D,m,C,E,u,e,f,v,l,j,h].map((i=>i.default)).filter(Boolean)},6159:(i,s,a)=>{a.d(s,{J:()=>t,c:()=>n});const n=JSON.parse("{}"),t=Object.fromEntries([["/",{loader:()=>a.e(4470).then(a.bind(a,6902)),meta:{t:"LuoThink",i:"fa-solid fa-book-open-reader"}}],["/blog.html",{loader:()=>a.e(6632).then(a.bind(a,5005)),meta:{t:"LuoThink",i:"fa-solid fa-house-crack"}}],["/intro.html",{loader:()=>a.e(3912).then(a.bind(a,824)),meta:{t:"个人介绍",i:"fa-solid fa-circle-nodes"}}],["/apps/Applist.html",{loader:()=>a.e(1024).then(a.bind(a,8045)),meta:{t:"必备应用",i:"fa-solid fa-list",O:1}}],["/apps/Chrome.html",{loader:()=>a.e(4281).then(a.bind(a,568)),meta:{t:"Chrome 扩展",i:"fa-brands fa-chrome",O:3}}],["/apps/toolbox.html",{loader:()=>a.e(8672).then(a.bind(a,3926)),meta:{t:"开源工具",i:"fa-solid fa-land-mine-on",O:2}}],["/apps/topic/",{loader:()=>a.e(6223).then(a.bind(a,7303)),meta:{t:"专题示例",i:"fa-solid fa-icons"}}],["/code/markdown/markdown%E8%AF%AD%E6%B3%95%E7%A4%BA%E4%BE%8B.html",{loader:()=>a.e(9560).then(a.bind(a,3405)),meta:{d:17209152e5,l:"2024年7月14日",c:["代码编程"],g:["markdown"],u:!0,e:'\n<blockquote>\n<p>微信公众号排版工具。问题或建议，请公众号留言。<strong><a href="#jump_8">程序员翻身</a></strong></p>\n</blockquote>\n<p>建议使用 <strong>Chrome</strong> 浏览器，体验最佳效果。</p>\n<p>使用微信公众号编辑器有一个十分头疼的问题：粘贴出来的代码，格式错乱，空间小还带行号，而且特别丑。Markdown.com.cn编辑器能够解决这个问题。</p>\n<p>Markdown是一种轻量级的「标记语言」。</p>\n<p>请阅读下方文本熟悉工具使用方法，本文可直接拷贝到微信中预览。</p>',r:{minutes:6.43,words:1928},t:"markdown语法示例",O:-1,y:"a"}}],["/code/%E7%AE%97%E6%B3%95/%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.html",{loader:()=>a.e(6288).then(a.bind(a,9663)),meta:{d:1721062143e3,e:'\n<h2>介绍</h2>\n<p>希尔排序，也称递减增量排序算法，是插入排序的一种更高效的改进版本。希尔排序是非稳定排序算法。希尔排序是基于插入排序的以下两点性质而提出改进方法的：</p>\n<ul>\n<li>\n<p>插入排序在对几乎已经排好序的数据操作时，效率高，即可以达到线性排序的效率</p>\n</li>\n<li>\n<p>但插入排序一般来说是低效的，因为插入排序每次只能将数据移动一位</p>\n</li>\n</ul>\n<h2>代码</h2>\n<ol>\n<li>C 代码</li>\n</ol>\n<div class="language-c line-numbers-mode" data-highlighter="shiki" data-ext="c" data-title="c" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> &lt;stdio.h&gt;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> int</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75;--shiki-light-font-style:inherit;--shiki-dark-font-style:italic"> len</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap, i, j;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">){</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">            temp </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[i];</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">            for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#D73A49;--shiki-dark:#56B6C2"> &amp;&amp;</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp; j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">-=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap )</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">                arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75"> arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j];</span></span>\n<span class="line"><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">            arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[j </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">+</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> gap] </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> temp;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">        }</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">() {</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> arr</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">[]</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">22</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">34</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">3</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">32</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">82</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">55</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">89</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">50</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">37</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">5</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">64</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">35</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">9</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">70</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">};</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr) </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">/sizeof</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">*</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">arr);</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">    shell_sort</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(arr, len);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    int</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> i;</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> (i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">; i </span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF"> len; i</span><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">++</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">)</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#61AFEF">        printf</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">(</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379">"</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#98C379"> "</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">, </span><span style="--shiki-light:#E36209;--shiki-dark:#E06C75">arr</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">[i]);</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#C678DD">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#D19A66"> 0</span><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">;</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#ABB2BF">}</span></span></code></pre>\n<div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',r:{minutes:1.41,words:423},t:"希尔排序算法",y:"a"}}],["/404.html",{loader:()=>a.e(7490).then(a.bind(a,9875)),meta:{t:""}}],["/apps/",{loader:()=>a.e(6267).then(a.bind(a,9595)),meta:{t:"Apps"}}],["/code/markdown/",{loader:()=>a.e(862).then(a.bind(a,219)),meta:{t:"Markdown"}}],["/code/",{loader:()=>a.e(738).then(a.bind(a,5125)),meta:{t:"Code"}}],["/code/%E7%AE%97%E6%B3%95/",{loader:()=>a.e(4691).then(a.bind(a,6276)),meta:{t:"算法"}}],["/category/",{loader:()=>a.e(3583).then(a.bind(a,5944)),meta:{t:"分类",I:!1}}],["/category/%E4%BB%A3%E7%A0%81%E7%BC%96%E7%A8%8B/",{loader:()=>a.e(8343).then(a.bind(a,4990)),meta:{t:"代码编程 分类",I:!1}}],["/tag/",{loader:()=>a.e(1797).then(a.bind(a,3494)),meta:{t:"标签",I:!1}}],["/tag/markdown/",{loader:()=>a.e(7931).then(a.bind(a,8795)),meta:{t:"标签: markdown",I:!1}}],["/article/",{loader:()=>a.e(7511).then(a.bind(a,4027)),meta:{t:"文章",I:!1}}],["/star/",{loader:()=>a.e(7199).then(a.bind(a,4139)),meta:{t:"星标",I:!1}}],["/timeline/",{loader:()=>a.e(5464).then(a.bind(a,1825)),meta:{t:"时间轴",I:!1}}]])},9354:(i,s,a)=>{a.d(s,{U:()=>n});const n=JSON.parse('{"base":"/","lang":"zh-CN","title":"LuoThink","description":"开源工具、效率方法，记录并输出一切能让自己提升的知识。","head":[["link",{"rel":"alternate","type":"application/atom+xml","href":"https://newzone.top/atom.xml","title":"LuoThink Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://newzone.top/feed.json","title":"LuoThink JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://newzone.top/rss.xml","title":"LuoThink RSS Feed"}],["link",{"rel":"icon","href":"/favicon.ico"}]],"locales":{}}')},8120:(i,s,a)=>{a.d(s,{K:()=>n});const n=JSON.parse('{"encrypt":{},"author":{"name":"LearnData","url":"https://newzone.top"},"logo":"/logo.svg","license":"CC BY-NC-ND 4.0","copyright":"\\n  版权声明：自由转载 - 非商用 - 非衍生 - 保持署名<a href=\\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh-hans\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">（创意共享 4.0 许可证）</a>|\\n  Copyright © 2023-present LearnData</a>\\n  ","displayFooter":true,"breadcrumb":false,"contributors":false,"lastUpdated":true,"editLink":false,"darkmode":"switch","fullscreen":true,"repo":"rockbenben/LearnData","repoLabel":"GitHub","repoDisplay":true,"docsDir":"docs","navbarLayout":{"start":["Brand"],"center":["Links"],"end":["Repo","Outlook","Search"]},"pageInfo":["Category","Tag","Word","ReadingTime","PageView"],"blog":{"articleInfo":["Date","PageView","Category","Tag","ReadingTime"],"name":"Luo","avatar":"/avatar_self.png","description":"爱自由、爱编程！","intro":"/intro.html","medias":{"GitHub":"https://github.com/luojunll"}},"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"博客","icon":"fa-solid fa-blog","link":"/blog"},{"text":"应用","icon":"fa-solid fa-bars-staggered","prefix":"/","children":["apps/Applist",{"text":"常用扩展","icon":"fa-brands fa-chrome","link":"apps/Chrome"}]},{"text":"工具收藏","icon":"fa-solid fa-bars","link":"https://nav.newzone.top/"}],"sidebar":{"":[{"text":"读书笔记","icon":"fa-brands fa-readme","link":"https://luojunll.github.io/reading/"},{"text":"🧰 应用手册","icon":"","prefix":"/apps/","link":"","collapsible":true,"children":["Applist.md","toolbox.md"]},{"text":"🔡 代码编程","icon":"","prefix":"/code/","collapsible":true,"children":[{"text":"📝 Markdown","icon":"","prefix":"/code/markdown/","collapsible":true,"children":["markdown语法示例.md"]},{"text":"🤖 算法","icon":"","prefix":"/code/算法/","collapsible":true,"children":["希尔排序.md"]}]},{"text":"博客文章","icon":"fa-solid fa-feather-pointed","prefix":"/_posts/","link":"/blog","collapsible":true,"children":"structure"}]}}}}')},1878:(i,s,a)=>{a.d(s,{v:()=>n});const n={"/_posts/":[]}},8047:(i,s,a)=>{a.d(s,{P:()=>n});const n={GitHub:'<svg xmlns="http://www.w3.org/2000/svg" class="icon github-icon" viewBox="0 0 1024 1024"><circle cx="512" cy="512" r="512" fill="#171515"/><path fill="#fff" d="M509.423 146.442c-200.317 0-362.756 162.42-362.756 362.8 0 160.266 103.936 296.24 248.109 344.217 18.139 3.327 24.76-7.872 24.76-17.486 0-8.613-.313-31.427-.49-61.702-100.912 21.923-122.205-48.63-122.205-48.63-16.495-41.91-40.28-53.067-40.28-53.067-32.937-22.51 2.492-22.053 2.492-22.053 36.407 2.566 55.568 37.386 55.568 37.386 32.362 55.438 84.907 39.43 105.58 30.143 3.296-23.444 12.667-39.43 23.032-48.498-80.557-9.156-165.246-40.28-165.246-179.297 0-39.604 14.135-71.988 37.342-97.348-3.731-9.178-16.18-46.063 3.556-96.009 0 0 30.46-9.754 99.76 37.19 28.937-8.048 59.97-12.071 90.823-12.211 30.807.14 61.843 4.165 90.822 12.21 69.26-46.944 99.663-37.189 99.663-37.189 19.792 49.946 7.34 86.831 3.61 96.01 23.25 25.359 37.29 57.742 37.29 97.347 0 139.366-84.82 170.033-165.637 179.013 13.026 11.2 24.628 33.342 24.628 67.182 0 48.498-.445 87.627-.445 99.521 0 9.702 6.535 20.988 24.945 17.444 144.03-48.067 247.881-183.95 247.881-344.175 0-200.378-162.442-362.798-362.802-362.798z"/></svg>'}}},i=>{i.O(0,[786,5258],(()=>(1007,i(i.s=1007)))),i.O()}]);